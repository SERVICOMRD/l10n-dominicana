name: Main odoo Unit Tests

on: [push, pull_request]

env:
  odoo: gcr.io/iterativo/dockerdoo
  version: '12.0'
  image: odoord
  
jobs:
  dependencies:
    name: Pull dependencies
    runs-on: ubuntu-latest
    container:
      image: gcr.io/iterativo/dockerdoo:${{ env.version }}
      options: --user root
      volumes:
        - ${{ github.workspace }}:/workspace
    outputs:
      get_modules: ${{ steps.get_modules.outputs.modules }}

    steps:
    - name: Checkout local
      uses: actions/checkout@v2
      with:
        path: main

    - name: Download python addons script
      run: curl https://raw.githubusercontent.com/iterativo-git/dockerdoo/${{ env.version }}/resources/getaddons.py -o getaddons.py

    - name: python get_modules
      id: get_modules
      run: |
        output=$(python -c "from getaddons import get_modules; print(','.join(get_modules('$GITHUB_WORKSPACE/main', depth=3)))")
        echo "::set-output name=modules::$output"

    - name: Checkout ITPP-Labs pos addons
      uses: actions/checkout@v2
      with:
        repository: itpp-labs/pos-addons
        path: pos-addons
        ref: ${{ env.version }}

    - name: Checkout indexa external services
      uses: actions/checkout@v2
      with:
        repository: indexa-git/external_service_addons
        path: external-service-addons
        ref: ${{ env.version }}

    - name: Zip repositories for upload
      run: sudo apt-get update && sudo apt-get install -y zip && zip -r repositories.zip .

    - name: Upload repository results
      uses: actions/upload-artifact@v2
      with:
        name: repositories
        path: repositories.zip

  test:
    name: Test
    needs: ['dependencies']
    runs-on: ubuntu-latest
    container:
      image: gcr.io/iterativo/dockerdoo:${{ env.version }}
      options: --user root
      volumes:
        - ${{ github.workspace }}:/workspace

    services:
      db:
        image: postgres:11
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Download repositories results
      uses: actions/download-artifact@v2
      with:
        name: repositories

    - name: Unzip repositories
      run: sudo apt-get update && sudo apt-get install -y unzip && unzip repositories.zip

    - name: chown home for pypy
      uses: docker://gcr.io/iterativo/dockerdoo:${{ env.version }}
      with:
        args: sudo chown -R 1000:1000 /github/home

    - name: Run odoo
      uses: docker://gcr.io/iterativo/dockerdoo:${{ env.version }}
      with:
        args: odoo
      env:
        RUN_TESTS: '1'
        PIP_AUTO_INSTALL: '1'
        LOG_LEVEL: test
        WITHOUT_DEMO: 'False'
        EXTRA_MODULES: ${{ needs.dependencies.outputs.get_modules }}
        ODOO_EXTRA_ADDONS: /github/workspace

  build:
    name: Build & Push Image
    needs: ['test']
    runs-on: ubuntu-latest

    steps:
    - name: Download  repository results
      uses: actions/download-artifact@v2
      with:
        name: repositories

    - name: Unzip repositories
      run: sudo apt-get update && sudo apt-get install -y unzip && unzip repositories.zip

    - name: Push to GitHub Packages
      uses: docker/build-push-action@v1
      with:
        dockerfile: main/Dockerfile
        cache_froms: gcr.io/iterativo/dockerdoo:${{ env.version }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: ${{ github.repository }}/${{ env.image }}
        tag_with_ref: true