name: Main odoo Unit Tests

on: [push, pull_request]

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  dependencies:
    name: Pull dependencies
    runs-on: ubuntu-latest
    container:
      image: gcr.io/iterativo/dockerdoo:12.0
      options: --user odoo

    outputs:
      get_modules: ${{ steps.get_modules.outputs.modules }}
      get_paths: ${{ steps.get_paths.outputs.paths }}

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout local
      uses: actions/checkout@v2
      with:
        path: main

    - name: Checkout ITPP-Labs pos addons
      uses: actions/checkout@v2
      with:
        repository: itpp-labs/pos-addons
        path: pos-addons
        ref: '12.0'

    - name: Checkout camptocamp cloud addons
      uses: actions/checkout@v2
      with:
        repository: camptocamp/odoo-cloud-platform
        path: odoo-cloud-platform
        ref: '12.0'

    - name: Checkout indexa external services
      uses: actions/checkout@v2
      with:
        repository: indexa-git/external_service_addons
        path: external-service-addons
        ref: '12.0'

    - name: Donwload python addons script
      run: curl https://raw.githubusercontent.com/iterativo-git/dockerdoo/12.0/resources/getaddons.py -o getaddons.py

    - name: python get_modules
      id: get_modules
      run: |
        output=$(python -c "from getaddons import get_modules; print(','.join(get_modules('$GITHUB_WORKSPACE/main', depth=3)))")
        echo "::set-output name=modules::$output"

    - name: python get_addons
      id: get_paths
      run: |
        output=$(python getaddons.py $GITHUB_WORKSPACE)
        echo "::set-output name=paths::$output"
  
    - name: pwd
      run: |
        pwd

    - name: ls $GITHUB_WORKSPACE
      run: |
        ls $GITHUB_WORKSPACE

    - name: Copy folders to odoo
      run: sudo cp -r $GITHUB_WORKSPACE /mnt/extra-addons && sudo chown -R 1000:1000 /mnt/extra-addons

    - run: echo ${{ steps.get_modules.outputs.modules }}
    - run: echo ${{ steps.get_paths.outputs.paths }}

    - name: Run odoo
      uses: docker://gcr.io/iterativo/dockerdoo:12.0
      with:
        args: odoo
      env:
        RUN_TESTS: '1'
        PIP_AUTO_INSTALL: '1'
        LOG_LEVEL: test
        WITHOUT_DEMO: 'False'
        HOME: /
        EXTRA_ADDONS_PATHS: ${{ steps.get_paths.outputs.paths }}
        EXTRA_MODULES: ${{ steps.get_modules.outputs.modules }}
  

    # - name: Upload repository results
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: repositories
    #     path: $GITHUB_WORKSPACE

  # build:
  #   name: Test
  #   needs: ['dependencies']
  #   runs-on: ubuntu-latest
  #   container:
  #     image: gcr.io/iterativo/dockerdoo:12.0
  #     env:
  #       RUN_TESTS: '1'
  #       PIP_AUTO_INSTALL: '1'
  #   services:
  #     postgres:
  #       image: postgres:11
  #       env:
  #         POSTGRES_DB: postgres
  #         POSTGRES_USER: odoo
  #         POSTGRES_PASSWORD: odoo
  #       # needed because the postgres container does not provide a healthcheck
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432:5432
  #   steps:

  #   - name: Upload repository results
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: repositories
  #   - name: show local
  #     run: ls $GITHUB_WORKSPACE
  #   - name: Copy folders to odoo
  #     run: cp -r $GITHUB_WORKSPACE /mnt/extra-addons
  #   - name: Run odoo
  #     uses: docker://gcr.io/iterativo/dockerdoo:12.0
  #     with:
  #       args: odoo
  #     env:
  #       RUN_TESTS: '1'
  #       PIP_AUTO_INSTALL: '1'
  #       LOG_LEVEL: test
  #       WITHOUT_DEMO: 'False'
  #       HOME: /
  #       ADDONS_PATH: ${{needs.dependencies.outputs.get_paths}}
  #       EXTRA_MODULES: ${{needs.dependencies.outputs.get_modules}}