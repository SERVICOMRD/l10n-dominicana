name: Main odoo Unit Tests

on: [push, pull_request]

jobs:
  dependencies:
    name: Pull dependencies
    runs-on: ubuntu-latest
    container:
      image: gcr.io/iterativo/dockerdoo:12.0
      options: --user root
      volumes:
        - ${{ github.workspace }}:/workspace
        - ${{ github.workspace }}:/mnt-extra-addons
    outputs:
      get_modules: ${{ steps.get_modules.outputs.modules }}

    services:
      db:
        image: postgres:11
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout local
      uses: actions/checkout@v2
      with:
        path: main

    - name: Download python addons script
      run: curl https://raw.githubusercontent.com/iterativo-git/dockerdoo/12.0/resources/getaddons.py -o getaddons.py

    - name: python get_modules
      id: get_modules
      run: |
        output=$(python -c "from getaddons import get_modules; print(','.join(get_modules('$GITHUB_WORKSPACE/main', depth=3)))")
        echo "::set-output name=modules::$output"

    - name: Checkout ITPP-Labs pos addons
      uses: actions/checkout@v2
      with:
        repository: itpp-labs/pos-addons
        path: pos-addons
        ref: '12.0'

    - name: Checkout indexa external services
      uses: actions/checkout@v2
      with:
        repository: indexa-git/external_service_addons
        path: external-service-addons
        ref: '12.0'

    - name: Run odoo
      uses: docker://gcr.io/iterativo/dockerdoo:12.0
      with:
        args: odoo
      env:
        RUN_TESTS: '1'
        PIP_AUTO_INSTALL: '1'
        LOG_LEVEL: test
        WITHOUT_DEMO: 'False'
        HOME: /
        EXTRA_MODULES: ${{ steps.get_modules.outputs.modules }}

    # - name: Build the tagged Docker image
    #   uses: docker://gcr.io/cloud-builders/docker
    #   with:
    #     args: build --cache-from gcr.io/iterativo/dockerdoo:12.0 . --file main/Dockerfile --tag odoo-dominicana/l10n-dominicana:12.0-actions-gav

    # - name: Run the Docker image
    #   uses: docker://gcr.io/cloud-builders/docker
    #   with:
    #     args: run -e RUN_TESTS -e EXTRA_MODULES -e PIP_AUTO_INSTALL -e LOG_LEVEL -e WITHOUT_DEMO --name odoo odoo-dominicana/l10n-dominicana:12.0-actions-gav
    #   env:
    #     RUN_TESTS: '1'
    #     PIP_AUTO_INSTALL: '1'
    #     LOG_LEVEL: test
    #     WITHOUT_DEMO: 'False'
    #     EXTRA_MODULES: ${{ steps.get_modules.outputs.modules }}
    #     DB_PORT_5432_TCP_ADDR: '127.0.0.1'

    # - name: Run the image
    #   run: docker run -e RUN_TESTS -e EXTRA_MODULES -e PIP_AUTO_INSTALL -e LOG_LEVEL -e WITHOUT_DEMO --name odoo odoo-dominicana/l10n-dominicana:12.0-actions-gav
    #   env:
    #     RUN_TESTS: '1'
    #     PIP_AUTO_INSTALL: '1'
    #     LOG_LEVEL: test
    #     WITHOUT_DEMO: 'False'
    #     EXTRA_MODULES: ${{ steps.get_modules.outputs.modules }}
    #     DB_PORT_5432_TCP_ADDR: '127.0.0.1'

    - run: sudo apt-get update && sudo apt-get install -y zip && zip -r repositories.zip ${{ github.workspace }}

    - name: Upload repository results
      uses: actions/upload-artifact@v2
      with:
        name: repositories
        path: repositories.zip

    - name: Push to GitHub Packages
      uses: docker/build-push-action@v1
      with:
        dockerfile: main/Dockerfile
        cache_froms: gcr.io/iterativo/dockerdoo:12.0
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        repository: odoo-dominicana/l10n-dominicana/odoord
        tag_with_ref: true
      env:
        RUN_TESTS: '1'
        PIP_AUTO_INSTALL: '1'
        LOG_LEVEL: test
        WITHOUT_DEMO: 'False'
        HOME: /
        EXTRA_MODULES: ${{ steps.get_modules.outputs.get_modules }}
        DB_PORT_5432_TCP_ADDR: localhost

  test:
    name: Test
    needs: ['dependencies']
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:11
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Login to GitHub Package Registry
      run: docker login docker.pkg.github.com -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Pull Docker image
      run: docker pull docker.pkg.github.com/odoo-dominicana/l10n-dominicana/odoord:12.0-actions-gav

    - name: Build the image
      run: docker run --name odoo docker.pkg.github.com/odoo-dominicana/l10n-dominicana/odoord:12.0-actions-gav
      env:
        RUN_TESTS: '1'
        PIP_AUTO_INSTALL: '1'
        LOG_LEVEL: test
        WITHOUT_DEMO: 'False'
        EXTRA_MODULES: ${{ needs.dependencies.outputs.get_modules }}
        DB_PORT_5432_TCP_ADDR: localhost