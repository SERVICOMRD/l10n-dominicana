name: Main odoo Unit Tests

on: [push, pull_request]

jobs:
  dependencies:
    name: Pull dependencies
    runs-on: ubuntu-latest
    container:
      image: gcr.io/cloud-builders/git
    steps:
    - name: Checkout local
      uses: actions/checkout@v2
      with:
        path: main

    - name: Checkout ITPP-Labs pos addons
      uses: actions/checkout@v2
      with:
        repository: itpp-labs/pos-addons
        path: pos-addons
        ref: '12.0'

    - name: Checkout camptocamp cloud addons
      uses: actions/checkout@v2
      with:
        repository: camptocamp/odoo-cloud-platform
        path: odoo-cloud-platform
        ref: '12.0'

    - name: Checkout indexa external services
      uses: actions/checkout@v2
      with:
        repository: indexa-git/external_service_addons
        path: external-service-addons
        ref: '12.0'

    - name: Print variables
      run: |
        echo ls .
        echo ls ~

    - name: List of modules to install or test
      run: |
        curl https://raw.githubusercontent.com/iterativo-git/dockerdoo/12.0/resources/getaddons.py -o getaddons.py
        python -c "from getaddons import get_modules; print(','.join(get_modules('./main', depth=3)))" > _MODULES


  build:
    name: Test
    needs: ['dependencies']
    runs-on: ubuntu-latest
    container:
      image: gcr.io/iterativo/dockerdoo:12.0
      env:
        RUN_TESTS: '1'
        PIP_AUTO_INSTALL: '1'

      volumes:
        - /github/home:/mnt/extra-addons
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Run odoo
        uses: docker://gcr.io/iterativo/dockerdoo:12.0
        with:
          args: odoo
        # working-directory: /
        env:
          RUN_TESTS: '1'
          PIP_AUTO_INSTALL: '1'
